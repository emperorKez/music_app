name: Builds
on:
  push:
    branches:
      - master
  pull_request:

permissions:
  contents: write

jobs:
  draft-release:
    name: Build ${{ matrix.target }}
    runs-on: macos-latest
    # outputs:
    #   upload_url: ${{ steps.create_release.outputs.upload_url }}
    strategy:
      fail-fast: false
      matrix:
        # target: [macOS, Windows, Linux, Android, IOS, Web]
        target: [Web]
        include:
          # # for macOs
          # - os: macos-latest
          #   target: macOS
          #   build_target: macos
          #   build_path: build/macos/Build/Products/Release
          #   asset_extension: .zip
          #   asset_content_type: application/zip

          # # for Windows
          # - os: windows-latest
          #   target: Windows
          #   build_target: windows
          #   build_path: build\windows\runner\Release
          #   asset_extension: .zip
          #   asset_content_type: application/zip

          # #for Linux
          # - os: ubuntu-latest
          #   target: Linux
          #   build_target: linux
          #   build_path: build/linux/x64/release/bundle
          #   asset_extension: .tar.gz
          #   asset_content_type: application/gzip

          # for Android
          - os: ubuntu-latest
            target: Android
            build_target: apk --debug
            build_path: build/app/outputs/flutter-apk
            asset_extension: .apk
            asset_content_type: application/vnd.android.package-archive

          # # for IOS
          # - os: ubuntu-latest
          #   target: IOS
          #   build_target: ios --no-codesign
          #   build_path: build/app/outputs/flutter-apk
          #   asset_extension: .apk
          #   asset_content_type: application/vnd.android.package-archive

          # for web
          - os: ubuntu-latest
            target: Web
            build_target: web
            build_path: build/web
            asset_extension: .zip
            asset_content_type: application/zip
    steps:
      - uses: actions/checkout@v3
    
      # Set up Flutter.
      - name: Clone Flutter repository with master channel
        # uses: subosito/flutter-action@48cafc24713cca54bbe03cdc3a423187d413aafa
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.7.11'
          channel: 'stable'
          cache: true
      - run: flutter doctor -v

      # Get packages.
      - name: Get packages
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2

      # Install Linux dependencies
      - name: Install Linux dependencies
        if: matrix.target == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libx11-dev pkg-config cmake ninja-build libblkid-dev

      # Install Android dependency
      - name: Set up JDK 
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: zulu
          cache: gradle

      # enable desktop
      - name: Enable desktop support
        if: matrix.target != 'Android' && matrix.target != 'IOS' && matrix.target != 'Web'
        run: |
          flutter config --enable-linux-desktop
          flutter config --enable-macos-desktop
          flutter config --enable-windows-desktop
       
      #enable web
      - name: Enable web
        if: matrix.target == 'Web'
        run: flutter config --enable-web

      # Get Pub dependencies
      - run: flutter pub get
      - run: flutter build ${{ matrix.build_target }}

      # Package the build.
      - name: Copy VC redistributables to release directory for Windows
        if: matrix.target == 'Windows'
        run: |
          Copy-Item (vswhere -latest -find 'VC\Redist\MSVC\*\x64\*\msvcp140.dll') .
          Copy-Item (vswhere -latest -find 'VC\Redist\MSVC\*\x64\*\vcruntime140.dll') .
          Copy-Item (vswhere -latest -find 'VC\Redist\MSVC\*\x64\*\vcruntime140_1.dll') .
        working-directory: ${{ matrix.build_path }}

      - name: Rename build for Android
        if: matrix.target == 'Android'
        run: mv app-debug.apk $GITHUB_WORKSPACE/music_app_${{ matrix.target }}.apk
        working-directory: ${{ matrix.build_path }}

      - name: Compress build for Linux
        if: matrix.target == 'Linux'
        run: tar czf $GITHUB_WORKSPACE/music_app_${{ matrix.target }}.tar.gz *
        working-directory: ${{ matrix.build_path }}

      - name: Compress build for macOS
        if: matrix.target == 'macOS'
        run: ditto -c -k --sequesterRsrc --keepParent Flutter\ Gallery.app $GITHUB_WORKSPACE/music_app_${{ matrix.target }}.zip
        working-directory: ${{ matrix.build_path }}

      - name: Compress build for Windows
        if: matrix.target == 'Windows'
        run: compress-archive -Path * -DestinationPath ${env:GITHUB_WORKSPACE}\music_app_${{ matrix.target }}.zip
        working-directory: ${{ matrix.build_path }}

      - name: Compress build for Web
        if: matrix.target == 'Web'
        run: |
          zip web.zip *
          mv web.zip ${{ github.workspace }}/music_app_${{ matrix.target }}.zip
        working-directory: ${{ matrix.build_path }}

      - name: Draft release with release notes
        id: create_release
        uses: softprops/action-gh-release@v1
        # if: startsWith(github.ref, 'refs/tags/')
        # uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
        with:
          # body_path: ${{ github.workspace }}-CHANGELOG.txt
          # tag_name: ${{ github.ref }}
          tag_name: release
          # name: Release ${{ github.ref }}
          name: Release
          # draft: true
          prerelease: false
          generate_release_notes: true
          files: |
            music_app_${{ matrix.target }}${{ matrix.asset_extension }}

      # # Upload the build.
      # - name: Add packaged build to release draft
      #   id: upload_release_asset
      #   uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url}}
      #     asset_path: ./music_app_${{ matrix.target }}${{ matrix.asset_extension }}
      #     asset_name: music_app_${{ matrix.target }}${{ matrix.asset_extension }}
      #     asset_content_type: ${{ matrix.asset_content_type }}